{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar numelDimension = require( '@stdlib/ndarray-base-numel-dimension' );\nvar getStride = require( '@stdlib/ndarray-base-stride' );\nvar getOffset = require( '@stdlib/ndarray-base-offset' );\nvar getData = require( '@stdlib/ndarray-base-data-buffer' );\nvar strided = require( '@stdlib/blas-ext-base-slast-index-of' ).ndarray;\nvar ndarraylike2scalar = require( '@stdlib/ndarray-base-ndarraylike2scalar' );\n\n\n// MAIN //\n\n/**\n* Returns the last index of a search element in a one-dimensional single-precision floating-point ndarray.\n*\n* @param {ArrayLikeObject<Object>} arrays - array-like object containing a one-dimensional input ndarray, a zero-dimensional ndarray containing the search element, and a zero-dimensional ndarray containing the index from which to begin searching\n* @returns {integer} index\n*\n* @example\n* var Float32Array = require( '@stdlib/array-float32' );\n* var ndarray = require( '@stdlib/ndarray-base-ctor' );\n* var scalar2ndarray = require( '@stdlib/ndarray-from-scalar' );\n*\n* var xbuf = new Float32Array( [ 1.0, 3.0, 4.0, 2.0 ] );\n* var x = new ndarray( 'float32', xbuf, [ 4 ], [ 1 ], 0, 'row-major' );\n*\n* var searchElement = scalar2ndarray( 2.0, {\n*     'dtype': 'float32'\n* });\n*\n* var fromIndex = scalar2ndarray( 0, {\n*     'dtype': 'generic'\n* });\n*\n* var v = slastIndexOf( [ x, searchElement, fromIndex ] );\n* // returns 3\n*/\nfunction slastIndexOf( arrays ) {\n\tvar searchElement;\n\tvar fromIndex;\n\tvar stride;\n\tvar offset;\n\tvar idx;\n\tvar N;\n\tvar x;\n\n\tx = arrays[ 0 ];\n\tN = numelDimension( x, 0 );\n\tsearchElement = ndarraylike2scalar( arrays[ 1 ] );\n\tfromIndex = ndarraylike2scalar( arrays[ 2 ] );\n\n\tif ( fromIndex < 0 ) {\n\t\tfromIndex += N;\n\t\tif ( fromIndex < 0 ) {\n\t\t\tfromIndex = 0;\n\t\t}\n\t} else if ( fromIndex >= N ) {\n\t\treturn -1;\n\t}\n\tN -= fromIndex;\n\tstride = getStride( x, 0 );\n\toffset = getOffset( x ) + ( stride*fromIndex );\n\n\tidx = strided( N, searchElement, getData( x ), stride, offset );\n\tif ( idx >= 0 ) {\n\t\tidx += fromIndex;\n\t}\n\treturn idx;\n}\n\n\n// EXPORTS //\n\nmodule.exports = slastIndexOf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the last index of a search element in a one-dimensional single-precision floating-point ndarray.\n*\n* @module @stdlib/blas-ext-base-ndarray-slast-index-of\n*\n* @example\n* var Float32Array = require( '@stdlib/array-float32' );\n* var ndarray = require( '@stdlib/ndarray-base-ctor' );\n* var scalar2ndarray = require( '@stdlib/ndarray-from-scalar' );\n* var slastIndexOf = require( '@stdlib/blas-ext-base-ndarray-slast-index-of' );\n*\n* var xbuf = new Float32Array( [ 1.0, 3.0, 4.0, 2.0 ] );\n* var x = new ndarray( 'float32', xbuf, [ 4 ], [ 1 ], 0, 'row-major' );\n*\n* var searchElement = scalar2ndarray( 2.0, {\n*     'dtype': 'float32'\n* });\n*\n* var fromIndex = scalar2ndarray( 0, {\n*     'dtype': 'generic'\n* });\n*\n* var v = slastIndexOf( [ x, searchElement, fromIndex ] );\n* // returns 3\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAiB,QAAS,sCAAuC,EACjEC,EAAY,QAAS,6BAA8B,EACnDC,EAAY,QAAS,6BAA8B,EACnDC,EAAU,QAAS,kCAAmC,EACtDC,EAAU,QAAS,sCAAuC,EAAE,QAC5DC,EAAqB,QAAS,yCAA0C,EA8B5E,SAASC,EAAcC,EAAS,CAC/B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAOJ,GALAA,EAAIP,EAAQ,CAAE,EACdM,EAAIb,EAAgBc,EAAG,CAAE,EACzBN,EAAgBH,EAAoBE,EAAQ,CAAE,CAAE,EAChDE,EAAYJ,EAAoBE,EAAQ,CAAE,CAAE,EAEvCE,EAAY,EAChBA,GAAaI,EACRJ,EAAY,IAChBA,EAAY,WAEFA,GAAaI,EACxB,MAAO,GAER,OAAAA,GAAKJ,EACLC,EAAST,EAAWa,EAAG,CAAE,EACzBH,EAAST,EAAWY,CAAE,EAAMJ,EAAOD,EAEnCG,EAAMR,EAASS,EAAGL,EAAeL,EAASW,CAAE,EAAGJ,EAAQC,CAAO,EACzDC,GAAO,IACXA,GAAOH,GAEDG,CACR,CAKAb,EAAO,QAAUO,IC7CjB,IAAIS,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "numelDimension", "getStride", "getOffset", "getData", "strided", "ndarraylike2scalar", "slastIndexOf", "arrays", "searchElement", "fromIndex", "stride", "offset", "idx", "N", "x", "main"]
}
